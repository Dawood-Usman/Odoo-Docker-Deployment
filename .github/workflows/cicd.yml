name: Odoo CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    # Setup Docker and Docker Buildx for caching and building images
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    # Test Docker Compose locally in the CI environment
    - name: Test Docker Compose Build
      run: docker-compose -f docker-compose.yml build --pull
    
    - name: Test Docker Compose Up
      run: docker-compose -f docker-compose.yml up -d
      
    # Verify if containers are healthy after startup
    - name: Verify Containers Health
      run: |
        # Wait for services to become healthy
        for i in {1..10}; do
          sleep 10
          unhealthy_containers=$(docker ps --filter "health=unhealthy" --format "{{.Names}}")
          if [ -z "$unhealthy_containers" ]; then
            echo "All containers are healthy!"
            exit 0
          fi
          echo "Waiting for containers to become healthy..."
        done
        echo "Some containers are unhealthy:"
        docker ps --filter "health=unhealthy"
        exit 1
  # Deploy:
  #   name: Deploy to Server
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Set up SSH
  #       uses: webfactory/ssh-agent@v0.5.3
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  #     - name: Deploy to Server
  #       run: |
  #         ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST_NAME }} << EOF
  #           cd Odoo-Docker-Deployment/
  #           git pull origin main
  #           sudo ./scripts/deploy.sh
  #         EOF
